AC_INIT(user_share.c)

AM_INIT_AUTOMAKE(gnome-user-share, 0.12)
AM_CONFIG_HEADER(config.h)
	
AM_SANITY_CHECK
AM_MAINTAINER_MODE

AC_C_CONST
AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_PATH_XTRA
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T
AC_TYPE_UID_T

AC_PATH_PROG([HTTPD], [httpd],,
                  [$PATH:/usr/sbin])

default_httpd_version=`$HTTPD -v | head -1 | sed "s#.*/##" | cut -f 1-2 -d .` 		  	
AC_ARG_WITH(httpd-version, [  --with-httpd-version=VERSION         	Httpd version used.],
	HTTPD_VERSION="$withval", HTTPD_VERSION="$default_httpd_version")
	
AC_SUBST(HTTPD_VERSION)
	
AM_CONDITIONAL(HAVE_AVAHI, false)
AM_CONDITIONAL(HAVE_HOWL, false)
			  
AC_ARG_ENABLE(avahi, [  --disable-avahi     build without avahi support])
msg_avahi=no
if test "x$enable_avahi" != "xno"; then
	PKG_CHECK_MODULES(AVAHI, avahi-glib >= 0.6 avahi-client >= 0.6,
		  	[AM_CONDITIONAL(HAVE_AVAHI, true)
		   	AC_DEFINE(HAVE_AVAHI, [], [Set if we can use avahi])]
                        msg_avahi=yes,
	          	[AM_CONDITIONAL(HAVE_AVAHI, false)])
	AC_SUBST(AVAHI_CFLAGS)
	AC_SUBST(AVAHI_LIBS)
fi
			  
AC_ARG_ENABLE(howl, [  --disable-howl     build without howl support])
msg_howl=no
if test "x$msg_avahi" = "xno" -a "x$enable_howl" != "xno"; then
	PKG_CHECK_MODULES(HOWL, howl >= 0.9.6,
		  	[AM_CONDITIONAL(HAVE_HOWL, true)
		   	AC_DEFINE(HAVE_HOWL, [], [Set if we can use howl])]
                        msg_howl=yes,
	          	[AM_CONDITIONAL(HAVE_HOWL, false)])
	AC_SUBST(HOWL_CFLAGS)
	AC_SUBST(HOWL_LIBS)
fi

PKG_CHECK_EXISTS(dbus-1 >= 1.1.1, have_dbus_1_1=true, have_dbus_1_1=false)
if $have_dbus_1_1 ; then
   DBUS_MODULES=dbus-1
   AC_DEFINE(HAVE_DBUS_1_1, 1, [Set to true if we have D-BUS 1.1])
fi

if test "x$msg_avahi" = "xno" -a "x$msg_howl" = "xno"; then
  AC_MSG_ERROR([Neither avahi nor howl detected. Gnome-user-share needs a mDNS implementation.])
fi

PKG_CHECK_MODULES(USER_SHARE, glib-2.0 >= 2.2.0 gconf-2.0 $DBUS_MODULES)
AC_SUBST(USER_SHARE_CFLAGS)
AC_SUBST(USER_SHARE_LIBS)

PKG_CHECK_MODULES(USER_SHARE_CONFIG, glib-2.0 >= 2.2.0 gtk+-2.0 >= 2.4.0 libglade-2.0 gconf-2.0)
AC_SUBST(USER_SHARE_CONFIG_CFLAGS)
AC_SUBST(USER_SHARE_CONFIG_LIBS)
	
AC_CHECK_LIB(socket, socket)

have_socket=no
AC_CHECK_FUNCS(socket, have_socket=yes)
if test $have_socket = no; then
  # socket is not in the default libraries.  See if it's in some other.
  for lib in bsd socket inet; do
    AC_CHECK_LIB($lib, socket, [
	  LIBS="$LIBS -l$lib"
	  have_socket=yes
	  AC_DEFINE(HAVE_SOCKET)
	  break])
  done
fi

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

dnl where to install the gnome-user-share binary
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
fi
if test "x$exec_prefix" = "xNONE"; then
   exec_prefix=$prefix
fi
installdir="`eval echo $libexecdir`"
AC_SUBST(installdir, $installdir)

dnl ==========================================================================

ALL_LINGUAS="ar bg ca cs da de dz el en_CA en_GB es fi fr gl gu hu it ja ko lt mk nb ne nl oc pa pl pt pt_BR ru rw sk sl sq sv tr uk vi zh_CN zh_TW"

GETTEXT_PACKAGE=gnome-user-share
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE],"$GETTEXT_PACKAGE", [The gettext package])

AM_GLIB_GNU_GETTEXT

AC_PROG_INTLTOOL
	
dnl ==========================================================================
dnl Check for SELinux
    
AC_CHECK_LIB(selinux, is_selinux_enabled, [ SELINUX_LIBS=-lselinux
  AC_DEFINE(HAVE_SELINUX,[1],[Found Selinux]) ])
AC_SUBST(SELINUX_LIBS)
	
dnl ==========================================================================

dnl Turn on the additional warnings last, so -Werror doesn't affect other tests.

AC_ARG_ENABLE(more-warnings,
[  --enable-more-warnings  Maximum compiler warnings],
set_more_warnings="$enableval",[
if test -f $srcdir/CVSVERSION; then
	is_cvs_version=true
	set_more_warnings=yes
else
	set_more_warnings=no
fi
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	AC_MSG_RESULT(yes)
	CFLAGS="\
	-Wall \
	-Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wcast-align -Wsign-compare \
	-Werror \
	$CFLAGS"

	for option in -Wno-strict-aliasing -Wno-sign-compare; do
		SAVE_CFLAGS="$CFLAGS"
		CFLAGS="$CFLAGS $option"
		AC_MSG_CHECKING([whether gcc understands $option])
		AC_TRY_COMPILE([], [],
			has_option=yes,
			has_option=no,)
		if test $has_option = no; then
			CFLAGS="$SAVE_CFLAGS"
		fi
		AC_MSG_RESULT($has_option)
		unset has_option
		unset SAVE_CFLAGS
	done
	unset option
else
	AC_MSG_RESULT(no)
fi
			       
AC_OUTPUT([
Makefile
gnome-user-share.desktop.in
po/Makefile.in
])

echo "
	httpd version:               $HTTPD_VERSION
"
